事件修饰符

   stop             禁止冒泡
   once             单次事件
   prevent          阻止默认事件
   native           原生事件(组件使用)
   keydown.enter
   keydown.13
   keydown.enter.ctrl

    @click="fn()"
    @click.stop="fn()"

------------------------------------------------------------------------

computed-计算属性
    缓存-性能
    方便-读、写

watch-监听

-------------------------------------------------------------------------------

vue-router
    1、容器
        <router-view></router-view>

    2、路由表
        let router = new VueRouter({
            routes: [
                {path, component},
                {path, component},
                {path, component},
                ...
            ]
        })

    3、添加到vm对象
        new Vue({
            el,data,...
            router: router
        })

------------------------------------------------------------------

router-view     容器
router-link     a标签

---------------------------------------------------------------------
<router-link to="/xxx/xxxx">
<router-link :to="{name, params}">

命名路由
new VueRouter({
    routes: [
        {path, component},
        {path, name, component}
    ]
})

----------------------------------------------------------------------

history是一个栈   先进后出，后进先出

    push(string | object)       入栈
    replace(string | object)    替换最后一个历史记录（当前）
    go(int)
        go(-1)
        go(1)

-------------------------------------------------------------

$route      当前路由信息
$router     操作路由

---------------------------------------------------------------------

监视路由
    1、watch-不推荐
        只能看，不能干预
    2、路由守卫 ?
        可控制

--------------------------------------------------------------------

多视图





